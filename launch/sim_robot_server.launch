<?xml version="1.0" ?>
<launch>
  <arg name="gui" default="false" />
  <arg name="gazebo_gui" default="true" />
  <arg name="world_path" default = "$(find task_on_nav_robot_server)/worlds" />
  <arg name="world_name" default="empty_world.world"/>
  <arg name="world" value ="$(arg world_path)/$(arg world_name)"/>
  <arg name="server_port" default="50051"/>
  
  <arg name="gazebo_uri" default="$(env GAZEBO_MASTER_URI)" />

  <arg name="robot_x"   default="0.0" />
  <arg name="robot_y"   default="0.0" />
  <arg name="robot_yaw" default="0.0" />
  
  <arg name="wait_moved" default="true" />
  <arg name="map_size" default="512" />
  <arg name="agent_size" default="0.5" />
  <arg name="wall_threshold" default="0.01" />
  
  <rosparam param="slam_map_size" subst_value="True">$(arg map_size)</rosparam>
  <rosparam param="gazebo_uri" subst_value="True">$(arg gazebo_uri)</rosparam>
  <rosparam param="wait_moved" subst_value="True">$(arg wait_moved)</rosparam>
  <rosparam param="agent_size" subst_value="True">$(arg agent_size)</rosparam>
  <rosparam param="wall_threshold" subst_value="True">$(arg wall_threshold)</rosparam>

  <!-- spawn robot and bring up controllers etc. -->
  <include file="$(find mir_gazebo)/launch/mir_empty_world.launch">
    <arg name="gui" value="$(arg gazebo_gui)" />
    <arg name="teleop" value="false"/>
  </include>
  
  <!-- Launch slam node -->
  <include file="$(find mir_navigation)/launch/hector_mapping.launch.xml">
    <arg name="map_size" value="$(arg map_size)" />
  </include>
  
  <!-- Launch move_base -->
  <include file="$(find mir_navigation)/launch/move_base.xml">
    <arg name="with_virtual_walls" value="false" />
  </include>

  <!-- Launch robot_pose publisher -->
  <node name="robot_pose_publisher" pkg="task_on_nav_robot_server" type="robot_pose_publisher.py" respawn="false" output="screen" >
  </node>

  <!-- Launch RViz -->
  <node if="$(arg gui)" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
  args="-d $(find mir_navigation)/rviz/navigation.rviz" output="screen">
  </node>

  <!--Launch gRPC server -->
  <node name="robot_server" pkg="task_on_nav_robot_server" type="robot_server.py" respawn="false" output="screen" >
    <param name="server_port" value="$(arg server_port)"></param>
    <param name="real_robot" value="false"></param>
  </node>

</launch>